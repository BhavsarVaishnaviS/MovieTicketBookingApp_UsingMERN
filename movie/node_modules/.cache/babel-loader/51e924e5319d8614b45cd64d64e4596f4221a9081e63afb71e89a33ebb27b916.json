{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task\\\\MovieTicketApp\\\\movie\\\\src\\\\components\\\\Header.js\";\n// import React, { useEffect, useState } from \"react\";\n// import {\n//   AppBar,\n//   Autocomplete,\n//   Toolbar,\n//   TextField,\n//   Tab,\n//   Tabs,\n//   IconButton,\n// } from \"@mui/material\";\n// import MovieIcon from \"@mui/icons-material/Movie\";\n// import { Box } from \"@mui/system\";\n// import { getAllMovies } from \"../api-helpers/api-helpers\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { adminActions, userActions } from \"../store\";\n// // const dummyArray = [\"eMemory\",\"Brahmastra\",\"Forest grump\"]\n\n// const Header = () => {\n//   const navigate = useNavigate();\n//   const dispatch = useDispatch();\n//   const isAdminLoggedIn = useSelector((state) => state.admin.isLoggedIn);\n//   const isUserLoggedIn = useSelector((state) => state.user.isLoggedIn);\n//   const [value, setvalue] = useState();\n//   const [movies, setMovies] = useState([]);\n//   const [selectedMovie, setSelectedMovie] = useState();\n//   useEffect(() => {\n//     getAllMovies()\n//       .then((data) => setMovies(data.movies))\n//       .catch((err) => console.log(err));\n//   }, []);\n//   const logout = (isAdmin) => {\n//     dispatch(isAdmin ? adminActions.logout() : userActions.logout());\n//   };\n//   const handleChange = (e, val) => {\n//     const movie = movies.find((m) => m.title === val);\n//     console.log(movie);\n//     if (isUserLoggedIn) {\n//       navigate(`/booking/${movie._id}`);\n//     }\n//   };\n//   const handleTabChange = (event, newValue) => {\n//     setvalue(newValue);\n//   };\n//   return (\n//     <AppBar position=\"stiky\" sx={{ bgcolor: \"#2b2d42\" }}>\n//       <Toolbar>\n//         <Box width={\"20%\"}>\n//           <IconButton LinkComponent={Link} to=\"/\">\n//             <MovieIcon sx={{ color: \"white\" }} />\n//           </IconButton>\n//         </Box>\n//         <Box width={\"30%\"} margin={\"auto\"}>\n//           <Autocomplete\n//             onChange={handleChange}\n//             freeSolo\n//             options={movies && movies.map((option) => option.title)}\n//             renderInput={(params) => (\n//               <TextField\n//                 sx={{ input: { color: \"white\" } }}\n//                 variant=\"standard\"\n//                 {...params}\n//                 placeholder=\"Search Across Multiple Movies\"\n//               />\n//             )}\n//           />\n//         </Box>\n//         <Box display={\"flex\"}>\n//           <Tabs\n//             textColor=\"inherit\"\n//             indicatorColor=\"secondary\"\n//             value={value}\n//             onChange={handleTabChange}\n//           >\n//             <Tab LinkComponent={Link} to=\"/movies\" label=\"Movies\" />\n//             {!isAdminLoggedIn && !isUserLoggedIn && (\n//               <>\n//                 <Tab label=\"Admin\" LinkComponent={Link} to=\"/admin\" />\n//                 <Tab label=\"Auth\" LinkComponent={Link} to=\"/auth\" />\n//               </>\n//             )}\n//             {!isUserLoggedIn && (\n//               <>\n//                 <Tab label=\"Profile\" LinkComponent={Link} to=\"/user\" />\n//                 <Tab\n//                   onClick={() => logout(false)}\n//                   label=\"Logout\"\n//                   LinkComponent={Link}\n//                   to=\"/\"\n//                 />\n//               </>\n//             )}\n//             {!isAdminLoggedIn && (\n//               <>\n//                 <Tab label=\"Add movie\" LinkComponent={Link} to=\"/add\" />\n//                 <Tab label=\"Profile\" LinkComponent={Link} to=\"/user-admin\" />\n//                 <Tab\n//                   onClick={() => logout(true)}\n//                   label=\"Logout\"\n//                   LinkComponent={Link}\n//                   to=\"/\"\n//                 />\n//               </>\n//             )}\n//           </Tabs>\n//         </Box>\n//       </Toolbar>\n//     </AppBar>\n//   );\n// };\n\n// export default Header;\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Header","AppBar","children","Toolbar","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Task/MovieTicketApp/movie/src/components/Header.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   AppBar,\r\n//   Autocomplete,\r\n//   Toolbar,\r\n//   TextField,\r\n//   Tab,\r\n//   Tabs,\r\n//   IconButton,\r\n// } from \"@mui/material\";\r\n// import MovieIcon from \"@mui/icons-material/Movie\";\r\n// import { Box } from \"@mui/system\";\r\n// import { getAllMovies } from \"../api-helpers/api-helpers\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { adminActions, userActions } from \"../store\";\r\n// // const dummyArray = [\"eMemory\",\"Brahmastra\",\"Forest grump\"]\r\n\r\n// const Header = () => {\r\n//   const navigate = useNavigate();\r\n//   const dispatch = useDispatch();\r\n//   const isAdminLoggedIn = useSelector((state) => state.admin.isLoggedIn);\r\n//   const isUserLoggedIn = useSelector((state) => state.user.isLoggedIn);\r\n//   const [value, setvalue] = useState();\r\n//   const [movies, setMovies] = useState([]);\r\n//   const [selectedMovie, setSelectedMovie] = useState();\r\n//   useEffect(() => {\r\n//     getAllMovies()\r\n//       .then((data) => setMovies(data.movies))\r\n//       .catch((err) => console.log(err));\r\n//   }, []);\r\n//   const logout = (isAdmin) => {\r\n//     dispatch(isAdmin ? adminActions.logout() : userActions.logout());\r\n//   };\r\n//   const handleChange = (e, val) => {\r\n//     const movie = movies.find((m) => m.title === val);\r\n//     console.log(movie);\r\n//     if (isUserLoggedIn) {\r\n//       navigate(`/booking/${movie._id}`);\r\n//     }\r\n//   };\r\n//   const handleTabChange = (event, newValue) => {\r\n//     setvalue(newValue);\r\n//   };\r\n//   return (\r\n//     <AppBar position=\"stiky\" sx={{ bgcolor: \"#2b2d42\" }}>\r\n//       <Toolbar>\r\n//         <Box width={\"20%\"}>\r\n//           <IconButton LinkComponent={Link} to=\"/\">\r\n//             <MovieIcon sx={{ color: \"white\" }} />\r\n//           </IconButton>\r\n//         </Box>\r\n//         <Box width={\"30%\"} margin={\"auto\"}>\r\n//           <Autocomplete\r\n//             onChange={handleChange}\r\n//             freeSolo\r\n//             options={movies && movies.map((option) => option.title)}\r\n//             renderInput={(params) => (\r\n//               <TextField\r\n//                 sx={{ input: { color: \"white\" } }}\r\n//                 variant=\"standard\"\r\n//                 {...params}\r\n//                 placeholder=\"Search Across Multiple Movies\"\r\n//               />\r\n//             )}\r\n//           />\r\n//         </Box>\r\n//         <Box display={\"flex\"}>\r\n//           <Tabs\r\n//             textColor=\"inherit\"\r\n//             indicatorColor=\"secondary\"\r\n//             value={value}\r\n//             onChange={handleTabChange}\r\n//           >\r\n//             <Tab LinkComponent={Link} to=\"/movies\" label=\"Movies\" />\r\n//             {!isAdminLoggedIn && !isUserLoggedIn && (\r\n//               <>\r\n//                 <Tab label=\"Admin\" LinkComponent={Link} to=\"/admin\" />\r\n//                 <Tab label=\"Auth\" LinkComponent={Link} to=\"/auth\" />\r\n//               </>\r\n//             )}\r\n//             {!isUserLoggedIn && (\r\n//               <>\r\n//                 <Tab label=\"Profile\" LinkComponent={Link} to=\"/user\" />\r\n//                 <Tab\r\n//                   onClick={() => logout(false)}\r\n//                   label=\"Logout\"\r\n//                   LinkComponent={Link}\r\n//                   to=\"/\"\r\n//                 />\r\n//               </>\r\n//             )}\r\n//             {!isAdminLoggedIn && (\r\n//               <>\r\n//                 <Tab label=\"Add movie\" LinkComponent={Link} to=\"/add\" />\r\n//                 <Tab label=\"Profile\" LinkComponent={Link} to=\"/user-admin\" />\r\n//                 <Tab\r\n//                   onClick={() => logout(true)}\r\n//                   label=\"Logout\"\r\n//                   LinkComponent={Link}\r\n//                   to=\"/\"\r\n//                 />\r\n//               </>\r\n//             )}\r\n//           </Tabs>\r\n//         </Box>\r\n//       </Toolbar>\r\n//     </AppBar>\r\n//   );\r\n// };\r\n\r\n// export default Header;\r\n\r\nimport React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <AppBar>\r\n      <Toolbar>\r\n\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default Header"],"mappingszB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACnB,oBACED,OAAA,CAACE,MAAM;IAAAC,QAAA,eACLH,OAAA,CAACI,OAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEb,CAAC;AAAAC,EAAA,GARKR,MAAM;AAUZ,eAAeA,MAAM;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}