{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\"; // Import axios for making HTTP requests\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    isLoggedIn: true\n  },\n  reducers: {\n    login(state) {\n      state.isLoggedIn = true;\n    },\n    logout(state) {\n      state.isLoggedIn = false;\n    }\n  }\n});\nconst adminSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    isLoggedIn: false\n  },\n  reducers: {\n    login(state) {\n      state.isLoggedIn = true;\n    },\n    logout(state) {\n      state.isLoggedIn = false;\n    }\n  }\n});\nexport const userActions = userSlice.actions;\nexport const adminActions = adminSlice.actions;\nexport const store = configureStore({\n  reducer: {\n    user: userSlice.reducer,\n    admin: adminSlice.reducer\n  }\n});\nexport const userLoginAsync = userData => async dispatch => {\n  try {\n    const response = await axios.post(\"/user/login\", userData);\n    if (response.status === 200) {\n      dispatch(userLogin());\n    }\n  } catch (error) {\n    console.error(\"Error logging in:\", error);\n    // Handle error condition if needed\n  }\n};\nexport const adminLoginAsync = adminData => async dispatch => {\n  try {\n    const response = await axios.post(\"/admin/login\", adminData);\n    if (response.status === 200) {\n      dispatch(adminLogin());\n    }\n  } catch (error) {\n    console.error(\"Error logging in as admin:\", error);\n    // Handle error condition if needed\n  }\n};","map":{"version":3,"names":["configureStore","createSlice","axios","userSlice","name","initialState","isLoggedIn","reducers","login","state","logout","adminSlice","userActions","actions","adminActions","store","reducer","user","admin","userLoginAsync","userData","dispatch","response","post","status","userLogin","error","console","adminLoginAsync","adminData","adminLogin"],"sources":["D:/Task/MovieTicketApp/movie/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\"; // Import axios for making HTTP requests\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: { isLoggedIn: true },\r\n  reducers: {\r\n    login(state) {\r\n      state.isLoggedIn = true;\r\n    },\r\n    logout(state) {\r\n      state.isLoggedIn = false;\r\n    },\r\n  },\r\n});\r\n\r\nconst adminSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: { isLoggedIn: false },\r\n  reducers: {\r\n    login(state) {\r\n      state.isLoggedIn = true;\r\n    },\r\n    logout(state) {\r\n      state.isLoggedIn = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const userActions = userSlice.actions;\r\nexport const adminActions = adminSlice.actions;\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    user: userSlice.reducer,\r\n    admin: adminSlice.reducer,\r\n  },\r\n});\r\n\r\nexport const userLoginAsync = (userData) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post(\"/user/login\", userData);\r\n    if (response.status === 200) {\r\n      dispatch(userLogin());\r\n    } \r\n  } catch (error) {\r\n    console.error(\"Error logging in:\", error);\r\n    // Handle error condition if needed\r\n  }\r\n};\r\n\r\nexport const adminLoginAsync = (adminData) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post(\"/admin/login\", adminData);\r\n    if (response.status === 200) {\r\n      dispatch(adminLogin());\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error logging in as admin:\", error);\r\n    // Handle error condition if needed\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAC9D,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAAEC,UAAU,EAAE;EAAK,CAAC;EAClCC,QAAQ,EAAE;IACRC,KAAKA,CAACC,KAAK,EAAE;MACXA,KAAK,CAACH,UAAU,GAAG,IAAI;IACzB,CAAC;IACDI,MAAMA,CAACD,KAAK,EAAE;MACZA,KAAK,CAACH,UAAU,GAAG,KAAK;IAC1B;EACF;AACF,CAAC,CAAC;AAEF,MAAMK,UAAU,GAAGV,WAAW,CAAC;EAC7BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAAEC,UAAU,EAAE;EAAM,CAAC;EACnCC,QAAQ,EAAE;IACRC,KAAKA,CAACC,KAAK,EAAE;MACXA,KAAK,CAACH,UAAU,GAAG,IAAI;IACzB,CAAC;IACDI,MAAMA,CAACD,KAAK,EAAE;MACZA,KAAK,CAACH,UAAU,GAAG,KAAK;IAC1B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMM,WAAW,GAAGT,SAAS,CAACU,OAAO;AAC5C,OAAO,MAAMC,YAAY,GAAGH,UAAU,CAACE,OAAO;AAE9C,OAAO,MAAME,KAAK,GAAGf,cAAc,CAAC;EAClCgB,OAAO,EAAE;IACPC,IAAI,EAAEd,SAAS,CAACa,OAAO;IACvBE,KAAK,EAAEP,UAAU,CAACK;EACpB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMG,cAAc,GAAIC,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EAC9D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,aAAa,EAAEH,QAAQ,CAAC;IAC1D,IAAIE,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MAC3BH,QAAQ,CAACI,SAAS,CAAC,CAAC,CAAC;IACvB;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC;EACF;AACF,CAAC;AAED,OAAO,MAAME,eAAe,GAAIC,SAAS,IAAK,MAAOR,QAAQ,IAAK;EAChE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,cAAc,EAAEM,SAAS,CAAC;IAC5D,IAAIP,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MAC3BH,QAAQ,CAACS,UAAU,CAAC,CAAC,CAAC;IACxB;EACF,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}